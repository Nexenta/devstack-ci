[[local|localrc]]
enable_service tempest
{% if config.ci.branch != "juno" and config.ci.branch != "icehouse" %}
enable_service c-bak
{% endif %}

ADMIN_PASSWORD="{{ config.devstack.password }}"
DATABASE_PASSWORD="{{ config.devstack.password }}"
RABBIT_PASSWORD="{{ config.devstack.password }}"
SERVICE_PASSWORD="{{ config.devstack.password }}"
SERVICE_TOKEN="{{ config.devstack.password }}"
DEST="{{ config.ci.base }}"
CIDIR="{{ config.ci.base }}/{{ config.ci.destination }}"
LOGDIR="{{ config.ci.base }}/{{ config.ci.logs }}"
SCREEN_LOGDIR="{{ config.ci.base }}/{{ config.ci.logs }}"
LOGFILE="{{ config.ci.base }}/{{ config.ci.logs }}/stack.log"
VIRT_DRIVER="libvirt"
ROOTSLEEP="0"
SERVICE_TIMEOUT="600"
IP_VERSION="4"
USE_SCREEN="True"
API_RATE_LIMIT="False"
INSTALL_TEMPEST="True"
LOG_COLOR="False"
SYSLOG="True"
USE_SYSTEMD="False"
USE_JOURNAL="False"

NEXENTA_REPOSITORY="{{ config.nexenta.repository }}"
NEXENTA_DESTINATION="{{ config.ci.base }}/{{ config.nexenta.destination }}"

{% for project in config.matrix.project %}
{% set value = namespace(found=none) %}
{% for branch in config.matrix.branch %}
{% if branch.ci == config.ci.branch %}
{% if branch.project == project.name %}
{% set value.found = branch.name %}
{% break %}
{% elif branch.project == "default" %}
{% set value.found = branch.name %}
{% endif %}
{% endif %}
{% endfor %}
{{ project.option }}="{{ value.found }}"
{% endfor %}
{% set value = namespace(list=[]) %}
{% for instance in config.backend.instances %}
{% if 'manila' in config.ci.backend %}
{% do value.list.append(config.ci.backend ~ loop.index) %}
{% else %}
{% do value.list.append(config.ci.backend ~ ':' ~ config.ci.backend ~ loop.index) %}
{% endif %}
{% endfor %}

{% if 'manila' in config.ci.backend %}
enable_plugin manila https://github.com/openstack/manila $MANILA_BRANCH
enable_plugin manila-ui https://github.com/openstack/manila-ui $MANILA_UI_BRANCH
MANILA_UI_ENABLED="True"
MANILA_ENABLED_SHARE_PROTOCOLS="{{ config.backend.protocol }}"
SHARE_DRIVER="{{ config.backend.driver }}"
MANILA_SERVICE_VM_FLAVOR_RAM="512"
MANILA_DEFAULT_SHARE_TYPE_EXTRA_SPECS="snapshot_support=True create_share_from_snapshot_support=True revert_to_snapshot_support=True mount_snapshot_support=True"
MANILA_MULTI_BACKEND="True"
MANILA_ENABLED_BACKENDS="{{ value.list|join(',') }}"
{% for instance in config.backend.instances %}
MANILA_BACKEND{{ loop.index }}_CONFIG_GROUP_NAME="{{ config.ci.backend }}{{ loop.index }}"
MANILA_SHARE_BACKEND{{ loop.index }}_NAME="{{ config.ci.backend }}{{ loop.index }}"
MANILA_OPTGROUP_{{ config.ci.backend }}{{ loop.index }}_driver_handles_share_servers="False"
MANILA_OPTGROUP_{{ config.ci.backend }}{{ loop.index }}_nexenta_host="{{ instance.host }}"
MANILA_OPTGROUP_{{ config.ci.backend }}{{ loop.index }}_nexenta_pool="{{ instance.pool }}"
MANILA_OPTGROUP_{{ config.ci.backend }}{{ loop.index }}_nexenta_nfs_share="{{ instance.dataset }}"
MANILA_OPTGROUP_{{ config.ci.backend }}{{ loop.index }}_nexenta_thin_provisioning="{{ instance.sparsed }}"
MANILA_OPTGROUP_{{ config.ci.backend }}{{ loop.index }}_nexenta_user="{{ config.backend.rest.user }}"
MANILA_OPTGROUP_{{ config.ci.backend }}{{ loop.index }}_nexenta_password="{{ config.backend.rest.password }}"
MANILA_OPTGROUP_{{ config.ci.backend }}{{ loop.index }}_nexenta_rest_port="{{ config.backend.rest.port }}"
MANILA_OPTGROUP_{{ config.ci.backend }}{{ loop.index }}_nexenta_rest_protocol="{{ config.backend.rest.protocol }}"
{% endfor %}
{% else %}
CINDER_VOLUME_CLEAR="none"
CINDER_ENABLED_BACKENDS="{{ value.list|join(',') }}"
TEMPEST_ENABLED_BACKENDS="{{ value.list|join(',') }}"
TEMPEST_VOLUME_VENDOR="{{ config.backend.vendor }}"
TEMPEST_VOLUME_DRIVER="{{ config.backend.driver }}"
TEMPEST_STORAGE_PROTOCOL="{{ config.backend.protocol }}"

declare -A NEXENTA_DRIVER
declare -A NEXENTA_REST_USER NEXENTA_REST_PASSWORD
declare -A NEXENTA_REST_HOST NEXENTA_REST_PORT NEXENTA_REST_PROTO
declare -A NEXENTA_HOST NEXENTA_POOL NEXENTA_DATASET NEXENTA_SPARSED
{% for instance in config.backend.instances %}
{% set backend = config.ci.backend ~ loop.index %}

NEXENTA_DRIVER[{{ backend }}]="{{ config.backend.driver }}"
NEXENTA_REST_HOST[{{ backend }}]="{{ config.backend.rest.hosts|join(',') }}"
NEXENTA_REST_PORT[{{ backend }}]="{{ config.backend.rest.port }}"
NEXENTA_REST_PROTO[{{ backend }}]="{{ config.backend.rest.protocol }}"
NEXENTA_REST_USER[{{ backend }}]="{{ config.backend.rest.user }}"
NEXENTA_REST_PASSWORD[{{ backend }}]="{{ config.backend.rest.password }}"
NEXENTA_HOST[{{ backend }}]="{{ instance.host }}"
NEXENTA_POOL[{{ backend }}]="{{ instance.pool }}"
NEXENTA_DATASET[{{ backend }}]="{{ instance.dataset }}"
NEXENTA_SPARSED[{{ backend }}]="{{ instance.sparsed }}"
NEXENTA_OPTIONS[{{ backend }}]="{{ instance.options }}"
{% endfor %}
{% endif %}

[[post-config|$CINDER_CONF]]

[DEFAULT]
driver_ssl_cert_verify = False
{% if config.ci.branch != "juno" and config.ci.branch != "icehouse" %}
backup_file_size = "134217728"
backup_sha_block_size_bytes = "32768"
backup_driver = "cinder.backup.drivers.nfs"
backup_share = "{{ config.backup.host }}:{{ config.backup.share }}/{{ config.ci.backend }}"
backup_mount_options = "{{ config.backup.options }}"
{% endif %}

{% if 'manila' in config.ci.backend %}
[[post-config|$TEMPEST_CONFIG]]

[share]
capability_storage_protocol = "{{ config.backend.protocol }}"
capability_snapshot_support = "True"
capability_create_share_from_snapshot_support = "True"
capability_revert_to_snapshot_support = "True"
capability_mount_snapshot_support = "True"
backend_names = "{{ value.list|join(',') }}"
multi_backend = "True"
multitenancy_enabled = "False"
enable_protocols = "{{ config.backend.protocol | lower }}"
enable_ip_rules_for_protocols = "{{ config.backend.protocol | lower }}"
enable_ro_access_level_for_protocols = "{{ config.backend.protocol | lower }}"
run_mount_snapshot_tests = "True"
run_quota_tests = "True"
run_extend_tests = "True"
run_revert_to_snapshot_tests = "True"
run_share_group_tests = "True"
{% if 'ns5' in config.ci.backend %}
run_shrink_tests = "True"
{% else %}
run_shrink_tests = "False"
{% endif %}
run_snapshot_tests = "True"
run_consistency_group_tests = "False"
run_replication_tests = "False"
run_migration_tests = "False"
run_manage_unmanage_tests = "False"
run_manage_unmanage_snapshot_tests = "False"
{% endif %}
