diff --git a/cinder/api/openstack/wsgi.py b/cinder/api/openstack/wsgi.py
index 2142879..74a4582 100644
--- a/cinder/api/openstack/wsgi.py
+++ b/cinder/api/openstack/wsgi.py
@@ -18,6 +18,7 @@ import collections
 import functools
 import inspect
 import math
+import sys
 import time
 
 from oslo_log import log as logging
@@ -41,6 +42,9 @@ from cinder.i18n import _
 from cinder import utils
 from cinder.wsgi import common as wsgi
 
+if sys.version_info[0] == 2:
+    reload(sys)
+    sys.setdefaultencoding('utf-8')
 
 LOG = logging.getLogger(__name__)
 
diff --git a/cinder/api/v3/volumes.py b/cinder/api/v3/volumes.py
index b2e51e9..0986a33 100644
--- a/cinder/api/v3/volumes.py
+++ b/cinder/api/v3/volumes.py
@@ -190,12 +190,6 @@ class VolumeController(volumes_v2.VolumeController):
                     "the latest one of volume %(v_id)s.")
             raise exc.HTTPBadRequest(explanation=msg % {'s_id': snapshot_id,
                                                         'v_id': volume.id})
-        if volume.size != l_snap.volume_size:
-            msg = _("Can't revert volume %(v_id)s to its latest snapshot "
-                    "%(s_id)s. The volume size must be equal to the snapshot "
-                    "size.")
-            raise exc.HTTPBadRequest(explanation=msg % {'s_id': snapshot_id,
-                                                        'v_id': volume.id})
         try:
             msg = 'Reverting volume %(v_id)s to snapshot %(s_id)s.'
             LOG.info(msg, {'v_id': volume.id,
diff --git a/test-requirements.txt b/test-requirements.txt
index 28ee878..2add5aa 100644
--- a/test-requirements.txt
+++ b/test-requirements.txt
@@ -17,6 +17,5 @@ testtools>=2.2.0 # MIT
 testresources>=2.0.0 # Apache-2.0/BSD
 testscenarios>=0.4 # Apache-2.0/BSD
 oslo.versionedobjects[fixtures]>=1.31.2 # Apache-2.0
-tempest>=17.1.0 # Apache-2.0
 bandit>=1.1.0 # Apache-2.0
 reno>=2.5.0 # Apache-2.0
diff --git a/tox.ini b/tox.ini
index b9cf6c7..0d6f4cc 100644
--- a/tox.ini
+++ b/tox.ini
@@ -68,7 +68,7 @@ setenv =
   OS_TEST_PATH = ./cinder/tests/compliance
 
 [testenv:pep8]
-basepython = python3
+basepython = python2
 commands =
   flake8 {posargs} .
   {toxinidir}/tools/config/check_uptodate.sh
@@ -114,7 +114,7 @@ basepython = python3
 commands = oslopolicy-sample-generator --config-file=tools/config/cinder-policy-generator.conf
 
 [testenv:genopts]
-basepython = python3
+basepython = python2
 sitepackages = False
 envdir = {toxworkdir}/pep8
 commands = python tools/config/generate_cinder_opts.py
