diff --git a/cinder/api/openstack/wsgi.py b/cinder/api/openstack/wsgi.py
index 3b85cf7..7cbc904 100644
--- a/cinder/api/openstack/wsgi.py
+++ b/cinder/api/openstack/wsgi.py
@@ -40,6 +40,11 @@ from cinder.i18n import _
 from cinder import utils
 from cinder.wsgi import common as wsgi
 
+if six.PY2:
+    from imp import reload
+    import sys
+    reload(sys)
+    sys.setdefaultencoding('utf-8')
 
 LOG = logging.getLogger(__name__)
 
diff --git a/cinder/api/v3/volumes.py b/cinder/api/v3/volumes.py
index 839392a..b236601 100644
--- a/cinder/api/v3/volumes.py
+++ b/cinder/api/v3/volumes.py
@@ -190,12 +190,6 @@ class VolumeController(volumes_v2.VolumeController):
                     "the latest one of volume %(v_id)s.")
             raise exc.HTTPBadRequest(explanation=msg % {'s_id': snapshot_id,
                                                         'v_id': volume.id})
-        if volume.size != l_snap.volume_size:
-            msg = _("Can't revert volume %(v_id)s to its latest snapshot "
-                    "%(s_id)s. The volume size must be equal to the snapshot "
-                    "size.")
-            raise exc.HTTPBadRequest(explanation=msg % {'s_id': snapshot_id,
-                                                        'v_id': volume.id})
         try:
             msg = 'Reverting volume %(v_id)s to snapshot %(s_id)s.'
             LOG.info(msg, {'v_id': volume.id,
diff --git a/test-requirements.txt b/test-requirements.txt
index 28ee878..2add5aa 100644
--- a/test-requirements.txt
+++ b/test-requirements.txt
@@ -17,6 +17,5 @@ testtools>=2.2.0 # MIT
 testresources>=2.0.0 # Apache-2.0/BSD
 testscenarios>=0.4 # Apache-2.0/BSD
 oslo.versionedobjects[fixtures]>=1.31.2 # Apache-2.0
-tempest>=17.1.0 # Apache-2.0
 bandit>=1.1.0 # Apache-2.0
 reno>=2.5.0 # Apache-2.0
diff --git a/tox.ini b/tox.ini
index 8d7af9e..f5abdb7 100644
--- a/tox.ini
+++ b/tox.ini
@@ -12,8 +12,9 @@ setenv = VIRTUAL_ENV={envdir}
          OS_TEST_TIMEOUT=60
          OS_TEST_PATH=./cinder/tests/unit
 usedevelop = True
-install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky} {opts} {packages}
+install_command = pip install -c{toxinidir}/../requirements/upper-constraints.txt {opts} {packages}
 deps =
+    -c{toxinidir}/../requirements/upper-constraints.txt
     -r{toxinidir}/test-requirements.txt
     -r{toxinidir}/requirements.txt
 
@@ -35,7 +36,7 @@ passenv = *_proxy *_PROXY
 basepython = python3
 whitelist_externals = rm
 deps =
-    -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky}
+    -c{toxinidir}/../requirements/upper-constraints.txt
     -r{toxinidir}/doc/requirements.txt
 commands =
   rm -rf api-ref/build
@@ -44,7 +45,7 @@ commands =
 [testenv:releasenotes]
 basepython = python3
 deps =
-  -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky}
+  -c{toxinidir}/../requirements/upper-constraints.txt
   -r{toxinidir}/requirements.txt
   -r{toxinidir}/doc/requirements.txt
 commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html
@@ -126,7 +127,7 @@ commands = {posargs}
 [testenv:docs]
 basepython = python3
 deps =
-  -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky}
+  -c{toxinidir}/../requirements/upper-constraints.txt
   -r{toxinidir}/requirements.txt
   -r{toxinidir}/doc/requirements.txt
 commands =
