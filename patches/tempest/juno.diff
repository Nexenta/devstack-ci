diff --git a/tempest/common/waiters.py b/tempest/common/waiters.py
index 52568cb..d8daea8 100644
--- a/tempest/common/waiters.py
+++ b/tempest/common/waiters.py
@@ -42,11 +42,6 @@ def wait_for_server_status(client, server_id, status, ready_wait=True,
     start_time = int(time.time())
     timeout = client.build_timeout + extra_timeout
     while True:
-        # NOTE(afazekas): Now the BUILD status only reached
-        # between the UNKNOWN->ACTIVE transition.
-        # TODO(afazekas): enumerate and validate the stable status set
-        if status == 'BUILD' and server_status != 'UNKNOWN':
-            return
         if server_status == status:
             if ready_wait:
                 if status == 'BUILD':
diff --git a/tempest/common/utils/linux/remote_client.py b/tempest/common/utils/linux/remote_client.py
index 6a238d0..fc2bbff 100644
--- a/tempest/common/utils/linux/remote_client.py
+++ b/tempest/common/utils/linux/remote_client.py
@@ -70,7 +70,7 @@ class RemoteClient():
 
     def get_partitions(self):
         # Return the contents of /proc/partitions
-        command = 'cat /proc/partitions'
+        command = 'lsblk -n -i -o name'
         output = self.exec_command(command)
         return output
 
diff --git a/tempest/api/volume/test_extensions.py b/tempest/api/volume/test_extensions.py
index 66ea9b7c8..0f6c2d622 100644
--- a/tempest/api/volume/test_extensions.py
+++ b/tempest/api/volume/test_extensions.py
@@ -39,7 +39,7 @@ class ExtensionsV2TestJSON(base.BaseVolumeTest):
         if ext == 'all':
             self.assertIn('Hosts', map(lambda x: x['name'], extensions))
         elif ext:
-            self.assertIn(ext, map(lambda x: x['name'], extensions))
+            self.assertIn(ext, map(lambda x: x['alias'], extensions))
         else:
             raise self.skipException('There are not any extensions configured')
 
diff --git a/tox.ini b/tox.ini
index edfee15b3..77191d23f 100644
--- a/tox.ini
+++ b/tox.ini
@@ -8,19 +8,38 @@ sitepackages = True
 setenv = VIRTUAL_ENV={envdir}
          OS_TEST_PATH=./tempest/test_discover
 deps = -r{toxinidir}/requirements.txt
+       -c{toxinidir}/../requirements/upper-constraints.txt
 
 [testenv]
 setenv = VIRTUAL_ENV={envdir}
          OS_TEST_PATH=./tempest/tests
 usedevelop = True
-install_command = pip install -U {opts} {packages}
+install_command = pip install {opts} -c{toxinidir}/../requirements/upper-constraints.txt {packages}
 whitelist_externals = *
 deps = -r{toxinidir}/requirements.txt
        -r{toxinidir}/test-requirements.txt
+       -c{toxinidir}/../requirements/upper-constraints.txt
 commands =
          find . -type f -name "*.pyc" -delete
          bash tools/pretty_tox.sh '{posargs}'
 
+[testenv:ci]
+setenv = {[tempestenv]setenv}
+deps = {[tempestenv]deps}
+ignore_errors = True
+sitepackages = True
+recreate = True
+envdir = .tox/ci
+commands =
+    bash -cexu 'sudo chown -R $(id -un):$(id -gn) {toxinidir}'
+    find {toxinidir} -type f -name '*.pyc' -delete
+    bash -cexu 'find {toxinidir}/.. -mindepth 1 -maxdepth 1 -type d -name *-tempest-plugin | xargs -L1 -rt pip install'
+    ostestr --no-slowest --serial --regex '{posargs}'
+    bash -cexu 'if [[ ! -e .testrepository && -d .stestr ]]; then ln -s .stestr .testrepository; fi'
+    bash -cexu 'testr last --subunit >report.sub'
+    bash -cexu 'cat report.sub | subunit-trace >report.txt'
+    subunit2html report.sub report.html
+
 [testenv:genconfig]
 commands = oslo-config-generator --config-file tools/config/config-generator.tempest.conf
 
diff --git a/.stestr.conf b/.stestr.conf
new file mode 100644
index 000000000..818c7436a
--- /dev/null
+++ b/.stestr.conf
@@ -0,0 +1,3 @@
+[DEFAULT]
+test_path=./tempest/test_discover
+group_regex=([^\.]*\.)*
