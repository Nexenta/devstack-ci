diff --git a/files/debs/general b/files/debs/general
index e824d239..493f11c2 100644
--- a/files/debs/general
+++ b/files/debs/general
@@ -16,7 +16,6 @@ iputils-ping
 wget
 curl
 tcpdump
-euca2ools # only for testing client
 tar
 python-cmd2 # dist:precise
 python-dev
diff --git a/functions-common b/functions-common
index b92fa556..6ebab394 100644
--- a/functions-common
+++ b/functions-common
@@ -598,11 +598,11 @@ function git_clone {
     local git_dest=$2
     local git_ref=$3
     local orig_dir=$(pwd)
-    local git_clone_flags=""
+    local git_clone_flags="--branch $git_ref"
 
     RECLONE=$(trueorfalse False RECLONE)
-    if [[ "${GIT_DEPTH}" -gt 0 ]]; then
-        git_clone_flags="$git_clone_flags --depth $GIT_DEPTH"
+    if [[ "$GIT_DEPTH" =~ ^[0-9]+$ ]] && (( GIT_DEPTH > 0 )); then
+        git_clone_flags+=" --depth $GIT_DEPTH"
     fi
 
     if [[ "$OFFLINE" = "True" ]]; then
@@ -610,6 +610,7 @@ function git_clone {
         # print out the results so we know what change was used in the logs
         cd $git_dest
         git show --oneline | head -1
+        $CIDIR/scripts/patch.sh
         cd $orig_dir
         return
     fi
@@ -628,10 +629,7 @@ function git_clone {
         if [[ ! -d $git_dest ]]; then
             [[ "$ERROR_ON_CLONE" = "True" ]] && \
                 die $LINENO "Cloning not allowed in this configuration"
-            git_timed clone $git_clone_flags $git_remote $git_dest
-            cd $git_dest
-            # This checkout syntax works for both branches and tags
-            git checkout $git_ref
+            git_timed clone $git_clone_flags -- $git_remote $git_dest
         elif [[ "$RECLONE" = "True" ]]; then
             # if it does exist then simulate what clone does if asked to RECLONE
             cd $git_dest
@@ -660,6 +658,7 @@ function git_clone {
     # print out the results so we know what change was used in the logs
     cd $git_dest
     git show --oneline | head -1
+    $CIDIR/scripts/patch.sh
     cd $orig_dir
 }
 
@@ -1154,9 +1153,14 @@ function update_package_repo {
         local xtrace=$(set +o | grep xtrace)
         set +o xtrace
         if [[ "$REPOS_UPDATED" != "True" || "$RETRY_UPDATE" = "True" ]]; then
-            # if there are transient errors pulling the updates, that's fine.
-            # It may be secondary repositories that we don't really care about.
-            apt_get update  || /bin/true
+            local options="-o Acquire::http::Pipeline-Depth=0 -o Acquire::http::No-Cache=true -o Acquire::BrokenProxy=true"
+            local retries=10
+            while ! apt_get update $options; do
+                if (( --retries == 0 )); then
+                    die $LINENO "Failed to update apt repository"
+                fi
+                sleep $(( RANDOM % 60 ))
+            done
             REPOS_UPDATED=True
         fi
         $xtrace
@@ -1641,18 +1645,25 @@ function pip_install {
     fi
 
     local pip_version=$(python -c "import pip; \
-                        print(pip.__version__.strip('.')[0])")
+                        print(pip.__version__.split('.')[0])")
     if (( pip_version<6 )); then
         die $LINENO "Currently installed pip version ${pip_version} does not" \
             "meet minimum requirements (>=6)."
     fi
 
+    local opt_pip="-v"
+
+    if [[ -f "$REQUIREMENTS_DIR/upper-constraints.txt" ]]; then
+        opt_pip="-c $REQUIREMENTS_DIR/upper-constraints.txt"
+    fi
+
     $xtrace
     $sudo_pip \
         http_proxy=${http_proxy:-} \
         https_proxy=${https_proxy:-} \
         no_proxy=${no_proxy:-} \
         $cmd_pip install \
+        $opt_pip \
         $@
 
     INSTALL_TESTONLY_PACKAGES=$(trueorfalse False INSTALL_TESTONLY_PACKAGES)
@@ -1741,19 +1752,8 @@ function setup_package_with_req_sync {
     local update_requirements=$(cd $project_dir && git diff --exit-code >/dev/null || echo "changed")
 
     if [[ $update_requirements != "changed" ]]; then
-        if [[ "$REQUIREMENTS_MODE" == "soft" ]]; then
-            if is_in_projects_txt $project_dir; then
-                (cd $REQUIREMENTS_DIR; \
-                    python update.py $project_dir)
-            else
-                # soft update projects not found in requirements project.txt
-                (cd $REQUIREMENTS_DIR; \
-                    python update.py -s $project_dir)
-            fi
-        else
-            (cd $REQUIREMENTS_DIR; \
-                python update.py $project_dir)
-        fi
+        cd $REQUIREMENTS_DIR
+        tox -e update -- $project_dir
     fi
 
     setup_package $project_dir $flags
diff --git a/lib/infra b/lib/infra
index c825b4ee..5be54d37 100644
--- a/lib/infra
+++ b/lib/infra
@@ -40,6 +40,8 @@ function install_infra {
         # Always upgrade pbr to latest version as we may have pulled it
         # in via system packages.
         pip_install "-U" "pbr"
+        pip_install "-U" "tox"
+        pip_install "-U" "parsley"
     fi
 }
 
diff --git a/lib/tempest b/lib/tempest
index 1ae94577..a0a91b2d 100644
--- a/lib/tempest
+++ b/lib/tempest
@@ -520,6 +520,10 @@ function install_tempest {
     install_tempest_lib
     git_clone $TEMPEST_REPO $TEMPEST_DIR $TEMPEST_BRANCH
     pip_install tox
+    pip_install virtualenv
+    pip_install os-testr
+    pip_install testscenarios
+    pip_install tempest-lib
 }
 
 # init_tempest() - Initialize ec2 images
diff --git a/tools/fixup_stuff.sh b/tools/fixup_stuff.sh
index cc5275fe..6c44a246 100755
--- a/tools/fixup_stuff.sh
+++ b/tools/fixup_stuff.sh
@@ -9,9 +9,6 @@
 # - prettytable 0.7.2 permissions are 600 in the package and
 #   pip 1.4 doesn't fix it (1.3 did)
 #
-# - httplib2 0.8 permissions are 600 in the package and
-#   pip 1.4 doesn't fix it (1.3 did)
-#
 # - Fedora:
 #   - set selinux not enforcing
 #   - uninstall firewalld (f20 only)
@@ -91,16 +88,6 @@ if [[ -d $dir ]]; then
     sudo chmod +r $dir/*
 fi
 
-# Fix httplib2 0.8 permissions
-# Don't specify --upgrade so we use the existing package if present
-pip_install httplib2
-PACKAGE_DIR=$(get_package_path httplib2)
-# Only fix version 0.8
-dir=$(echo $PACKAGE_DIR-0.8*)
-if [[ -d $dir ]]; then
-    sudo chmod +r $dir/*
-fi
-
 if is_fedora; then
     # Disable selinux to avoid configuring to allow Apache access
     # to Horizon files (LP#1175444)
