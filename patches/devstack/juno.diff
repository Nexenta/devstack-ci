diff --git a/functions-common b/functions-common
index 7d2138d..6f11df1 100644
--- a/functions-common
+++ b/functions-common
@@ -569,14 +569,19 @@ function git_clone {
     local git_dest=$2
     local git_ref=$3
     local orig_dir=$(pwd)
+    local git_clone_flags="--branch $git_ref"
 
     RECLONE=$(trueorfalse False $RECLONE)
+    if [[ "$GIT_DEPTH" =~ ^[0-9]+$ ]] && (( GIT_DEPTH > 0 )); then
+        git_clone_flags+=" --depth $GIT_DEPTH"
+    fi
 
     if [[ "$OFFLINE" = "True" ]]; then
         echo "Running in offline mode, clones already exist"
         # print out the results so we know what change was used in the logs
         cd $git_dest
         git show --oneline | head -1
+        $CIDIR/scripts/patch.sh
         cd $orig_dir
         return
     fi
@@ -595,10 +600,7 @@ function git_clone {
         if [[ ! -d $git_dest ]]; then
             [[ "$ERROR_ON_CLONE" = "True" ]] && \
                 die $LINENO "Cloning not allowed in this configuration"
-            git_timed clone $git_remote $git_dest
-            cd $git_dest
-            # This checkout syntax works for both branches and tags
-            git checkout $git_ref
+            git_timed clone $git_clone_flags -- $git_remote $git_dest
         elif [[ "$RECLONE" = "True" ]]; then
             # if it does exist then simulate what clone does if asked to RECLONE
             cd $git_dest
@@ -627,6 +629,7 @@ function git_clone {
     # print out the results so we know what change was used in the logs
     cd $git_dest
     git show --oneline | head -1
+    $CIDIR/scripts/patch.sh
     cd $orig_dir
 }
 
@@ -1071,9 +1074,13 @@ function update_package_repo {
         local xtrace=$(set +o | grep xtrace)
         set +o xtrace
         if [[ "$REPOS_UPDATED" != "True" || "$RETRY_UPDATE" = "True" ]]; then
-            # if there are transient errors pulling the updates, that's fine.
-            # It may be secondary repositories that we don't really care about.
-            apt_get update  || /bin/true
+            local options="-o Acquire::http::Pipeline-Depth=0 -o Acquire::http::No-Cache=true -o Acquire::BrokenProxy=true"
+            local retries=10
+            while ! apt_get update $options; do
+                if (( --retries == 0 )); then
+                    die $LINENO "Failed to update apt repository"
+                fi
+            done
             REPOS_UPDATED=True
         fi
         $xtrace
@@ -1571,12 +1578,19 @@ function pip_install {
         pip_mirror_opt="--use-mirrors"
     fi
 
+    local opt_pip="-v"
+
+    if [[ -f "$REQUIREMENTS_DIR/upper-constraints.txt" ]]; then
+        opt_pip="-c $REQUIREMENTS_DIR/upper-constraints.txt"
+    fi
+
     $xtrace
     $sudo_pip PIP_DOWNLOAD_CACHE=${PIP_DOWNLOAD_CACHE:-/var/cache/pip} \
         http_proxy=$http_proxy \
         https_proxy=$https_proxy \
         no_proxy=$no_proxy \
         $cmd_pip install \
+        $opt_pip \
         $pip_mirror_opt $@
 
     if [[ "$INSTALL_TESTONLY_PACKAGES" == "True" ]]; then
@@ -1665,8 +1679,8 @@ function setup_package_with_req_sync {
     local update_requirements=$(cd $project_dir && git diff --exit-code >/dev/null || echo "changed")
 
     if [[ $update_requirements != "changed" ]]; then
-        (cd $REQUIREMENTS_DIR; \
-            python update.py $project_dir)
+        cd $REQUIREMENTS_DIR
+        tox -e update -- $project_dir
     fi
 
     setup_package $project_dir $flags
diff --git a/lib/infra b/lib/infra
index ef5a136..76f3af2 100644
--- a/lib/infra
+++ b/lib/infra
@@ -39,7 +39,9 @@ function install_infra {
     else
         # Always upgrade pbr to latest version as we may have pulled it
         # in via system packages.
-        pip_install "-U" "pbr"
+        pip_install pbr
+        pip_install tox
+        pip_install parsley
     fi
 }
 
diff --git a/lib/tempest b/lib/tempest
index 24ac072..5ba6c7e 100644
--- a/lib/tempest
+++ b/lib/tempest
@@ -293,8 +293,10 @@ function configure_tempest {
     iniset $TEMPEST_CONFIG compute ssh_timeout $BUILD_TIMEOUT
     iniset $TEMPEST_CONFIG compute image_ref $image_uuid
     iniset $TEMPEST_CONFIG compute image_ssh_user ${DEFAULT_INSTANCE_USER:-cirros}
+    iniset $TEMPEST_CONFIG compute image_ssh_password ${DEFAULT_INSTANCE_PASSWORD:-cirros}
     iniset $TEMPEST_CONFIG compute image_ref_alt $image_uuid_alt
     iniset $TEMPEST_CONFIG compute image_alt_ssh_user ${DEFAULT_INSTANCE_USER:-cirros}
+    iniset $TEMPEST_CONFIG compute image_alt_ssh_password ${DEFAULT_INSTANCE_PASSWORD:-cirros}
     iniset $TEMPEST_CONFIG compute flavor_ref $flavor_ref
     iniset $TEMPEST_CONFIG compute flavor_ref_alt $flavor_ref_alt
     iniset $TEMPEST_CONFIG compute ssh_connect_method $ssh_connect_method
@@ -418,7 +420,24 @@ function configure_tempest {
     if ! is_service_enabled c-bak; then
         iniset $TEMPEST_CONFIG volume-feature-enabled backup False
     fi
+
+    # Using CINDER_ENABLED_BACKENDS
+    if [[ -n "$CINDER_ENABLED_BACKENDS" ]] && [[ $CINDER_ENABLED_BACKENDS =~ .*,.* ]]; then
+        iniset $TEMPEST_CONFIG volume-feature-enabled multi_backend "True"
+        local backends_list=''
+        local i=1
+        local be
+        for be in ${CINDER_ENABLED_BACKENDS//,/ }; do
+            local be_name=${be##*:}
+            backends_list="${backends_list:+$backends_list,}$be_name"
+            iniset $TEMPEST_CONFIG volume "backend${i}_name" "$be_name"
+            i=$(( i + 1 ))
+        done
+        iniset $TEMPEST_CONFIG volume "backend_names" "$backends_list"
+    fi
+
     CINDER_MULTI_LVM_BACKEND=$(trueorfalse False $CINDER_MULTI_LVM_BACKEND)
+
     if [ $CINDER_MULTI_LVM_BACKEND == "True" ]; then
         iniset $TEMPEST_CONFIG volume-feature-enabled multi_backend "True"
         iniset $TEMPEST_CONFIG volume backend1_name "LVM_iSCSI"
@@ -495,6 +514,10 @@ function install_tempest {
     install_tempest_lib
     git_clone $TEMPEST_REPO $TEMPEST_DIR $TEMPEST_BRANCH
     pip_install tox
+    pip_install virtualenv
+    pip_install os-testr
+    pip_install testscenarios
+    pip_install tempest-lib
 }
 
 # init_tempest() - Initialize ec2 images
diff --git a/stack.sh b/stack.sh
index ca90e04..8ef062b 100755
--- a/stack.sh
+++ b/stack.sh
@@ -521,6 +521,10 @@ SYSLOG_PORT=${SYSLOG_PORT:-516}
 # Use color for logging output (only available if syslog is not used)
 LOG_COLOR=`trueorfalse True $LOG_COLOR`
 
+# Set global ``GIT_DEPTH=<number>`` to limit the history depth of the git clone
+# Set to 0 to disable shallow cloning
+GIT_DEPTH=${GIT_DEPTH:-0}
+
 # Reset the bundle of CA certificates
 SSL_BUNDLE_FILE="$DATA_DIR/ca-bundle.pem"
 rm -f $SSL_BUNDLE_FILE
diff --git a/tools/fixup_stuff.sh b/tools/fixup_stuff.sh
index 9668973..8b6af90 100755
--- a/tools/fixup_stuff.sh
+++ b/tools/fixup_stuff.sh
@@ -9,9 +9,6 @@
 # - prettytable 0.7.2 permissions are 600 in the package and
 #   pip 1.4 doesn't fix it (1.3 did)
 #
-# - httplib2 0.8 permissions are 600 in the package and
-#   pip 1.4 doesn't fix it (1.3 did)
-#
 # - RHEL6:
 #
 #   - set selinux not enforcing
@@ -86,16 +83,6 @@ if [[ -d $dir ]]; then
     sudo chmod +r $dir/*
 fi
 
-# Fix httplib2 0.8 permissions
-# Don't specify --upgrade so we use the existing package if present
-pip_install httplib2
-PACKAGE_DIR=$(get_package_path httplib2)
-# Only fix version 0.8
-dir=$(echo $PACKAGE_DIR-0.8*)
-if [[ -d $dir ]]; then
-    sudo chmod +r $dir/*
-fi
-
 if is_fedora; then
     # Disable selinux to avoid configuring to allow Apache access
     # to Horizon files (LP#1175444)
diff --git a/tools/install_pip.sh b/tools/install_pip.sh
index d57a687..28bdc20 100755
--- a/tools/install_pip.sh
+++ b/tools/install_pip.sh
@@ -46,7 +46,7 @@ function install_get_pip {
         curl -o $LOCAL_PIP $PIP_GET_PIP_URL || \
             die $LINENO "Download of get-pip.py failed"
     fi
-    sudo -H -E python $LOCAL_PIP
+    sudo -H -E python $LOCAL_PIP -c $TOOLS_DIR/cap-pip.txt
 }
 
 
diff --git a/tools/cap-pip.txt b/tools/cap-pip.txt
new file mode 100644
index 0000000..f5278d7
--- /dev/null
+++ b/tools/cap-pip.txt
@@ -0,0 +1 @@
+pip!=8,<10
