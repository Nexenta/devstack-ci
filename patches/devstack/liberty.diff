diff --git a/functions-common b/functions-common
index d7573c4..4a1cab8 100644
--- a/functions-common
+++ b/functions-common
@@ -477,11 +477,11 @@ function git_clone {
     local git_dest=$2
     local git_ref=$3
     local orig_dir=$(pwd)
-    local git_clone_flags=""
+    local git_clone_flags="--branch $git_ref"
 
     RECLONE=$(trueorfalse False RECLONE)
-    if [[ "${GIT_DEPTH}" -gt 0 ]]; then
-        git_clone_flags="$git_clone_flags --depth $GIT_DEPTH"
+    if [[ "$GIT_DEPTH" =~ ^[0-9]+$ ]] && (( GIT_DEPTH > 0 )); then
+        git_clone_flags+=" --depth $GIT_DEPTH"
     fi
 
     if [[ "$OFFLINE" = "True" ]]; then
@@ -489,6 +489,7 @@ function git_clone {
         # print out the results so we know what change was used in the logs
         cd $git_dest
         git show --oneline | head -1
+        $CIDIR/scripts/patch.sh
         cd $orig_dir
         return
     fi
@@ -513,10 +514,7 @@ function git_clone {
                 echo "the project to the \$PROJECTS variable in the job definition."
                 die $LINENO "Cloning not allowed in this configuration"
             fi
-            git_timed clone $git_clone_flags $git_remote $git_dest
-            cd $git_dest
-            # This checkout syntax works for both branches and tags
-            git checkout $git_ref
+            git_timed clone $git_clone_flags -- $git_remote $git_dest
         elif [[ "$RECLONE" = "True" ]]; then
             # if it does exist then simulate what clone does if asked to RECLONE
             cd $git_dest
@@ -545,6 +543,7 @@ function git_clone {
     # print out the results so we know what change was used in the logs
     cd $git_dest
     git show --oneline | head -1
+    $CIDIR/scripts/patch.sh
     cd $orig_dir
 }
 
@@ -1033,7 +1032,8 @@ function apt_get_update {
     [[ "$(id -u)" = "0" ]] && sudo="env"
 
     local proxies="http_proxy=${http_proxy:-} https_proxy=${https_proxy:-} no_proxy=${no_proxy:-} "
-    local update_cmd="$sudo $proxies apt-get update"
+    local options="-o Acquire::http::Pipeline-Depth=0 -o Acquire::http::No-Cache=true -o Acquire::BrokenProxy=true"
+    local update_cmd="$sudo $proxies apt-get update $options"
     if ! timeout 300 sh -c "while ! $update_cmd; do sleep 30; done"; then
         die $LINENO "Failed to update apt repos, we're dead now"
     fi
diff --git a/inc/python b/inc/python
index 29429fc..80fa584 100644
--- a/inc/python
+++ b/inc/python
@@ -108,7 +108,7 @@ function pip_install {
     cmd_pip="$cmd_pip -c $REQUIREMENTS_DIR/upper-constraints.txt"
 
     local pip_version=$(python -c "import pip; \
-                        print(pip.__version__.strip('.')[0])")
+                        print(pip.__version__.split('.')[0])")
     if (( pip_version<6 )); then
         die $LINENO "Currently installed pip version ${pip_version} does not" \
             "meet minimum requirements (>=6)."
diff --git a/lib/tempest b/lib/tempest
index defd452..34d6b65 100644
--- a/lib/tempest
+++ b/lib/tempest
@@ -499,6 +499,9 @@ function configure_tempest {
     iniset $TEMPEST_CONFIG object-storage-feature-enabled discoverable_apis $object_storage_api_extensions
 
     # Validation
+    iniset $TEMPEST_CONFIG validation ip_version_for_ssh 4
+    iniset $TEMPEST_CONFIG validation image_ssh_user ${DEFAULT_INSTANCE_USER:-cirros}
+    iniset $TEMPEST_CONFIG validation image_ssh_password ${DEFAULT_INSTANCE_PASSWORD:-cirros}
     iniset $TEMPEST_CONFIG validation run_validation ${TEMPEST_RUN_VALIDATION:-False}
 
     # Volume
@@ -536,13 +539,16 @@ function configure_tempest {
     # Using ``CINDER_ENABLED_BACKENDS``
     if [[ -n "$CINDER_ENABLED_BACKENDS" ]] && [[ $CINDER_ENABLED_BACKENDS =~ .*,.* ]]; then
         iniset $TEMPEST_CONFIG volume-feature-enabled multi_backend "True"
+        local backends_list=''
         local i=1
         local be
         for be in ${CINDER_ENABLED_BACKENDS//,/ }; do
             local be_name=${be##*:}
+            backends_list="${backends_list:+$backends_list,}$be_name"
             iniset $TEMPEST_CONFIG volume "backend${i}_name" "$be_name"
             i=$(( i + 1 ))
         done
+        iniset $TEMPEST_CONFIG volume "backend_names" "$backends_list"
     fi
 
     if [ $TEMPEST_VOLUME_DRIVER != "default" -o \
diff --git a/tools/fixup_stuff.sh b/tools/fixup_stuff.sh
index b57d140..709564b 100755
--- a/tools/fixup_stuff.sh
+++ b/tools/fixup_stuff.sh
@@ -9,9 +9,6 @@
 # - prettytable 0.7.2 permissions are 600 in the package and
 #   pip 1.4 doesn't fix it (1.3 did)
 #
-# - httplib2 0.8 permissions are 600 in the package and
-#   pip 1.4 doesn't fix it (1.3 did)
-#
 # - Fedora:
 #   - set selinux not enforcing
 #   - uninstall firewalld (f20 only)
@@ -91,16 +88,6 @@ if [[ -d $dir ]]; then
     sudo chmod +r $dir/*
 fi
 
-# Fix httplib2 0.8 permissions
-# Don't specify --upgrade so we use the existing package if present
-pip_install httplib2
-PACKAGE_DIR=$(get_package_path httplib2)
-# Only fix version 0.8
-dir=$(echo $PACKAGE_DIR-0.8*)
-if [[ -d $dir ]]; then
-    sudo chmod +r $dir/*
-fi
-
 if is_fedora; then
     # Disable selinux to avoid configuring to allow Apache access
     # to Horizon files (LP#1175444)
